---
import { changeLanguage } from "i18next";
import Layout from "../../../../layouts/SidebarLayout.astro";
import schema from "schema.json";
import type { JSONSchema7 } from "json-schema";
import { marked } from "marked";
import Property from "../../../../components/JsonSchema/Property.astro";

changeLanguage("en");

export async function getStaticPaths() {
    return [
        // Root object
        {
            params: { slug: undefined },
            props: { name: "Tauri Configuration", data: schema },
        },
        // Definitions
        ...Object.entries(schema.definitions).map(([key, value]) => {
            return {
                params: {
                    slug: key,
                },
                props: {
                    name: key,
                    data: value,
                },
            };
        }),
    ];
}
interface Props {
    name: string;
    data: JSONSchema7;
}
const { name, data } = Astro.props;
const paths = await getStaticPaths();
const siblingPages = paths.map((path) => {
    return {
        depth: 1,
        slug: `/api/core-config/1/${path.params.slug}`,
        text: path.props.name,
    };
});
---

<Layout title={name} leadingHeadings={siblingPages}>
  <div class="prose max-w-none">
    <h1>{name}</h1>

    {data.description && <div set:html={marked.parse(data.description)} />}

    <!-- TODO: Render the type object nicely -->
    {
      data.type && (
        <p>
          <strong>Type</strong> <code>{data.type}</code>
        </p>
      )
    }

    {
      data.default && (
        <>
          <h2>Default</h2>
          <p>{JSON.stringify(data.default)}</p>
        </>
      )
    }

    <!-- TODO: Examples -->

    <!-- TODO: allOf anyOf oneOf not -->

    {
      data.properties && (
        <>
          <h2>Properties</h2>

          {Object.entries(data.properties)
            .filter(([name, _]) => name !== '$schema')
            .map(([name, definition]) => (
              <Property name={name} definition={definition} />
            ))}
        </>
      )
    }
  </div>
</Layout>
